# GitHub Action for Laravel with MySQL and Redis
name: Outafrica
on: 
  push:
    branches:
    - main
  pull_request:

jobs:
  outafrica:
    name: Outafrica Deployment
    runs-on: ubuntu-latest
    outputs:
      deployment-matrix: ${{ steps.export-deployment-matrix.outputs.deployment-matrix }}
    steps: 
      - name: Checkout
        uses: actions/checkout@v3


      - name: Set Up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.4.2

      - name: Compile CSS & JavaScript Files
        run: |
          npm install
          npm run prod
      
      - name: Configure PHP 8.1
        uses: shivammathur/setup-php@master
        with: 
          php-version: 8.1
          extensions:  mbstring, mysql, curl, bz2, intl, readline, xml, pcov, xdebug, openssl, PDO, bcmath, fileinfo, json, tokenizer, ctype

      - name: Install Composer Dependencies
        run: composer install --no-dev --no-interaction --no-progress --prefer-dist --optimize-autoloader

      - name: Create Deployment Artifact
        env:
          GITHUB_SHA: ${{ github.sha }}
        run: tar -czf "${GITHUB_SHA}".tar.gz --exclude=*.git --exclude=node_modules *

      - name: Store Artifact For Distribution
        uses: actions/upload-artifact@v2
        with:
          name: app-build
          path: ${{ github.sha }}.tar.gz

      - name: Export Deployment Matrix
        id: export-deployment-matrix
        run: |
          JSON="$(cat ./deployment_config.json)"
          JSON="${JSON//'%'/'%25'}"
          JSON="${JSON//$'\n'/'%0A'}"
          JSON="${JSON//$'\r'/'%0D'}"
          echo "::set-output name=deployment-matrix::$JSON"
  
  prepare-release-on-server:
    runs-on: ubuntu-latest
    needs: outafrica
    strategy:
      matrix:
        server: ${{ fromJson(needs.outafrica.outputs.deployment-matrix) }}
    steps:
      - uses: actions/download-artifact@v2
        with: 
          name: app-build

      - name: Upload
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.PROD_IP }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          source: ${{ github.sha }}.tar.gz
          target: ${{ secrets.PATH }}/artifacts
      
      - name: Extract Archive And Create Directories
        uses: appleboy/ssh-action@master
        env: 
          GITHUB_SHA: ${{ github.sha }}
        with:
          host: ${{ secrets.PROD_IP }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          envs: GITHUB_SHA
          script: |
            mkdir -p "${{ secrets.PATH }}/releases/${GITHUB_SHA}"
            tar xzf ${{ secrets.PATH }}/artifacts/${GITHUB_SHA}.tar.gz -C "${{ secrets.PATH }}/releases/${GITHUB_SHA}"
            rm -rf ${{ secrets.PATH }}/releases/${GITHUB_SHA}/storage
            mkdir -p ${{ secrets.PATH }}/storage/{app,public,framework,logs}
            mkdir -p ${{ secrets.PATH }}/storage/framework/{cache,sessions,testing,views}
            mkdir -p ${{ secrets.PATH }}/storage/framework/cache/data
            chmod -R 0777 ${{ secrets.PATH }}/storage
  
  run-before-hooks:
    name: "${{ matrix.server.name }}: Before Hook"
    runs-on: ubuntu-latest
    needs: [outafrica, prepare-release-on-server]
    strategy: 
      matrix:
        server: ${{ fromJson(needs.outafrica.outputs.deployment-matrix) }}
    steps:
      - name: Run Before Hooks
        uses: appleboy/ssh-action@master
        env: 
          GITHUB_SHA: ${{ github.sha }}
          RELEASE_PATH: ${{ secrets.PATH }}/releases/${{ github.sha }}
          ACTIVE_RELEASE_PATH: ${{ secrets.PATH }}/current
          STORAGE_PATH: ${{ secrets.PATH }}/storage
          BASE_PATH: ${{ secrets.PATH }}
        with:
          host: ${{ secrets.PROD_IP }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          envs: GITHUB_SHA, RELEASE_PATH, ACTIVE_RELEASE_PATH, STORAGE_PATH, BASE_PATH
          script: |
            ${{ matrix.server.beforeHooks }}
      
  activate-release:
    name: "${{ matrix.server.name }}: Activate Release"
    runs-on: ubuntu-latest
    needs: [outafrica, prepare-release-on-server, run-before-hooks]
    strategy: 
      matrix:
        server: ${{ fromJson(needs.outafrica.outputs.deployment-matrix) }}
    steps:
      - name: Activate Release
        uses: appleboy/ssh-action@master
        env: 
          GITHUB_SHA: ${{ github.sha }}
          RELEASE_PATH: ${{ secrets.PATH }}/releases/${{ github.sha }}
          ACTIVE_RELEASE_PATH: ${{ secrets.PATH }}/current
          STORAGE_PATH: ${{ secrets.PATH }}/storage
          BASE_PATH: ${{ secrets.PATH }}
          PROD_ENV: ${{ secrets.PROD_ENV}}
        with:
          host: ${{ secrets.PROD_IP }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          envs: GITHUB_SHA, RELEASE_PATH, ACTIVE_RELEASE_PATH, STORAGE_PATH, BASE_PATH, PROD_ENV
          script: |
            printf "%s" "$PROD_ENV" > "${BASE_PATH}/.env"
            ln -s -n -f ${BASE_PATH}/.env  $RELEASE_PATH
            ln -s -n -f $STORAGE_PATH  $RELEASE_PATH
            ln -s -n -f $RELEASE_PATH $ACTIVE_RELEASE_PATH
            php artisan migrate
            service nginx reload
            service php8.1-fpm reload



